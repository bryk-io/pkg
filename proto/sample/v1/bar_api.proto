syntax = "proto3";

package sample.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
// imports are relative to the module root; in this case our module
// root is set to the `proto` directory.
import "sample/v1/model.proto";

// OpenAPI settings.
// https://buf.build/grpc-ecosystem/grpc-gateway/file/main:protoc-gen-openapiv2/options/annotations.proto
// https://buf.build/grpc-ecosystem/grpc-gateway/docs/main:grpc.gateway.protoc_gen_openapiv2.options
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  swagger: "2.0"
  schemes: HTTP
  schemes: HTTPS
  schemes: WSS
  consumes: "application/json"
  consumes: "application/protobuf"
  produces: "application/json"
  produces: "application/protobuf"
  info: {
    title: "Bar API"
    version: "0.1.0"
    contact: {
      name: "John Doe"
      email: "john.dow@example.com"
    }
  }
  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token provided as: 'Bearer {token}'"
      }
    }
  }
  security: {
    security_requirement: {key: "bearer"}
  }
};

// Sample "bar" service server.
service BarAPI {
  // Reachability test.
  rpc Ping(google.protobuf.Empty) returns (Pong) {
    option (google.api.http) = {post: "/bar/ping"};
  }
  // Health test.
  rpc Health(google.protobuf.Empty) returns (HealthResponse) {
    option (google.api.http) = {post: "/bar/health"};
  }
  // Sample request.
  rpc Request(google.protobuf.Empty) returns (Response) {
    option (google.api.http) = {post: "/bar/request"};
  }
}
