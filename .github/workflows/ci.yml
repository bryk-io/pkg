name: ci
permissions: read-all
env:
  # used to hold the commit message
  commit_msg: ""
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]
  workflow_dispatch: {}
#    Inputs are available under: github.event.inputs.{name}
#    inputs:
#      name:
#        description: 'Variable description'
#        required: true
#        default: 'default value here'
# https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_dispatch
jobs:
  # Scan direct Go dependencies for known vulnerabilities
  scan:
    name: scan for vulnerabilities
    runs-on: ubuntu-latest
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Configure runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.0.0
        with:
          go-version: 1.25.x

      # Get commit message
      - name: Get commit message
        run: |
          echo 'commit_msg<<EOF' >> $GITHUB_ENV
          git log --format=%B -n 1 ${{ github.sha }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # List direct dependencies
      - name: List dependencies
        run: go list -mod=readonly -f '{{if not .Indirect}}{{.}}{{end}}' -m all > go.list

      # Scan dependencies using Nancy
      # Can be excluded if the commit message contains: [skip scan-deps]
      # https://github.com/sonatype-nexus-community/nancy-github-action
      - name: Scan dependencies
        if: ${{ !contains(env.commit_msg, '[skip scan-deps]') }}
        uses: sonatype-nexus-community/nancy-github-action@726e338312e68ecdd4b4195765f174d3b3ce1533 # v1.0.3

      # Scan for leaked secrets
      # Can be excluded if the commit message contains: [skip scan-secrets]
      # https://github.com/marketplace/actions/trufflehog-oss
      - name: Scan for leaked secrets
        uses: trufflesecurity/trufflehog@18c7b1fc33e6c16b27ea66ff27cc7e642fb7cd0a # v3.90.6
        if: ${{ !contains(env.commit_msg, '[skip scan-secrets]') }}
        with:
          base: "" # scan entire branch
          head: ${{ github.ref_name }}
          extra_args: --debug --only-verified

  # Validate the protocol buffer definitions on the project
  # using 'buf'. Remove if not required.
  protos:
    name: validate protobuf definitions
    needs: scan
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write # allow buf to annotate PRs
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Configure runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.0.0
        with:
          go-version: 1.25.x

      # Get commit message
      - name: Get commit message
        run: |
          echo 'commit_msg<<EOF' >> $GITHUB_ENV
          git log --format=%B -n 1 ${{ github.sha }} >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      # Setup buf
      # https://buf.build/docs/bsr/ci-cd/github-actions/
      - name: Setup buf
        id: buf-setup
        uses: bufbuild/buf-action@8f4a1456a0ab6a1eb80ba68e53832e6fcfacc16c # v1.3.0
        with:
          version: 1.57.0
          lint: true
          format: true
          breaking: ${{ !contains(env.commit_msg, '[skip buf-breaking]') }}
          push: false
          github_token: ${{ secrets.ACCESS_TOKEN }} # github.token

  # Runs on every push and pull request on the selected branches.
  # Can also be executed manually.
  test:
    name: code quality and correctness
    needs: protos
    strategy:
      matrix:
        go-version: [1.24.x, 1.25.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    steps:
      # Harden workflow runner
      - name: Harden workflow runner (audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      # Configure runner environment
      - name: Set up runner environment
        run: ./.github/workflows/assets/utils.sh setup
        env:
          GITHUB_USER: ${{ github.actor }}
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      # Go
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.0.0
        with:
          go-version: ${{ matrix.go-version }}

      # Style consistency and static analysis using 'golangci-lint'
      # https://github.com/golangci/golangci-lint-action
      - name: Static analysis
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          version: v2.4

      # Run unit tests
      - name: Test
        run: make test

      # Save artifacts
      - name: Save artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: assets-${{ matrix.go-version }}
          path: |
            coverage.html
